# setting mouse usage 
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on
set -g default-terminal "xterm"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


# -----Mac OSX specific settings --------------------------------
# for neovim
set escape-time 0
# clipboard settings
set-option -g default-command "reattach-to-user-namespace -l bash"
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
# -----end of Mac OSX specific settings --------------------------------

# allow vi-keyboard bindings to work 
set-window-option -g mode-keys vi

set -g default-terminal "screen-256color"

# save tmux session plugin
run-shell ~/Software/tmux-resurrect/resurrect.tmux
## keyboard shortcut 
# Ctrl-B Ctrl-s save session 
# Ctrl-B Ctrl-r restore session

# want the status position to be on top
set-option -g status-position top


# set the prefix to 
# set prefix C-q
# unbind-key C-b
# bind-key C-q send-prefix


# set window list colors
set-window-option -g window-status-current-bg colour202
set-window-option -g window-status-current-fg colour208
# set tmux status line
set -g status-bg colour172
set -g status-fg colour221
#set-window-option -g window-status-current-attr bright

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-Left if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Navigate panes like Vim.
bind -r C-Left select-pane -L
bind -r C-Down select-pane -D
bind -r C-Up select-pane -U
bind -r C-Right select-pane -R

# # Split windows like Vim.
bind v split-window -h
bind s split-window -v

# make Tmux copy-and-paste shortcut to be vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
